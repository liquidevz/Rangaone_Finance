name: Docker Deploy to Domain

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'
  #     - run: npm install --legacy-peer-deps
  #     - run: npm run build
  #     - run: npm run lint
  #     - run: npm test
  # docker-test:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Test Docker Build
  #       id: docker-build
  #       run: |
  #         docker build -t test-build . 2>&1 | tee build.log
  #         if [ ${PIPESTATUS[0]} -ne 0 ]; then
  #           echo "BUILD_FAILED=true" >> $GITHUB_OUTPUT
  #           echo "BUILD_LOG<<EOF" >> $GITHUB_OUTPUT
  #           cat build.log >> $GITHUB_OUTPUT
  #           echo "EOF" >> $GITHUB_OUTPUT
  #           exit 1
  #         fi
  #     - name: Send Docker Build Failure Email
  #       if: failure()
  #       uses: dawidd6/action-send-mail@v3
  #       with:
  #         server_address: smtp.gmail.com
  #         server_port: 587
  #         username: ${{ secrets.EMAIL_USERNAME }}
  #         password: ${{ secrets.EMAIL_PASSWORD }}
  #         subject: 'Docker Build Failed - ${{ github.repository }}'
  #         body: |
  #           Docker build failed for commit ${{ github.sha }}
  #           Repository: ${{ github.repository }}
  #           Branch: ${{ github.ref }}
  #           Build Error: ${{ steps.docker-build.outputs.BUILD_LOG }}
  #           View logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  #         to: ${{ secrets.NOTIFICATION_EMAIL }}
  #         from: 'GitHub Actions'

  deploy:
    # needs: [test, docker-test]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CLOUDPANEL_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      
      - name: Execute deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.CLOUDPANEL_USER }}@${{ secrets.CLOUDPANEL_HOST }} '
          cd /home/rangaone/htdocs/www.rangaone.finance &&
          if [ ! -d ".git" ]; then git clone https://github.com/${{ github.repository }}.git . ; fi &&
          sudo lsof -ti:3000 | xargs kill -9 || true &&
          docker-compose -f docker-compose.prod.yml down --remove-orphans || true &&
          git fetch origin && git reset --hard origin/main &&
          rm -rf .next node_modules/.cache &&
          docker-compose -f docker-compose.prod.yml up -d --build --force-recreate &&
          sleep 30 &&
          curl -f http://localhost/api/health
          '