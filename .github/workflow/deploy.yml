name: Build & Deploy Next.js App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/rangaone/htdocs/www.rangaone.finance/Rangaone_Finance

            # Ensure repo is clean & updated
            git fetch origin
            git reset --hard origin/main
            git checkout main
            git pull origin main

            # Build new image with a unique tag
            NEW_TAG=deploy-$(date +%s)
            docker build -t nextjs-app:$NEW_TAG .

            # Run new container on a different port (e.g. 3001)
            docker run -d --name nextjs-app-temp -p 3001:3000 nextjs-app:$NEW_TAG

            # Wait for new container to become healthy (adjust if you add HEALTHCHECK in Dockerfile)
            sleep 10

            # If healthy, stop old container and start new one on correct port
            if [ "$(docker ps -q -f name=nextjs-app-temp)" ]; then
              # Stop old container
              if [ "$(docker ps -q -f name=nextjs-app)" ]; then
                docker stop nextjs-app
                docker rm nextjs-app
              fi

              # Restart new container on port 3000
              docker run -d --name nextjs-app -p 3000:3000 --restart unless-stopped nextjs-app:$NEW_TAG

              # Remove temp container
              docker stop nextjs-app-temp
              docker rm nextjs-app-temp

              echo "✅ Zero-downtime deployment successful!"
            else
              echo "❌ New container failed to start, keeping old one running."
              docker stop nextjs-app-temp
              docker rm nextjs-app-temp
              exit 1
            fi
